<style>

  #looper {
    position: relative;

  }
  #sequencer-wrapper{
    position: relative;
    overflow: hidden;
    height: 500px; width: 1400px;
  }

  #piano{
    height: 300px;
    width: 1200px;
    /*position: relative;
    left: 100px;
    top: 0px;*/
    clear: both;
  }

  #seq {
    padding-top: 10px;
    padding-left: 17px;
    position: relative;
    top: 0%; left: 0%;
    width: 1400px;
    z-index: 0;
    float:left;
    border:0px solid #fff;
    border-radius:0 0 3px 3px;
  }

  #sequencer-tab-labels-container {
    position: relative;
    width: 0px;
    height: 0px;
    z-index:-1;
  }

  #sequencer-tab-labels-container ul{
    height:200px; width: 40px;
    position:relative;
    top: 0px; left: 0px;
    float:left;
    border:0px solid #fff;
    border-radius:0 0 3px 3px;
  }
  #sequencer-tab-labels-container li {
    margin:0; padding:0;
    padding-bottom: 0.5px;
    padding-top:1px;
    height: 37.5px;
    background-color: #323156;
    list-style:none;
    position:relative;
    float:left;
  }

  ul#keys {
    height:0%; width:1200px;
    margin:0em auto; position:relative;
    border:0px solid #160801; border-radius:0em;
    float:right;
    }
  #keys li { margin:0; padding:0; list-style:none; position:relative; float:right; }
  #keys li.a { margin:0 0 0 -1em;  }

  #button-class {
    width: 100px;
    height: 50px;
    border-radius: 6px;
    font-family: 'Press Start 2P', cursive;
    color: #fff;
    text-align: center;
    position: relative;
    left: 100px;
    background:linear-gradient( to bottom right,rgba(63,81,181,1) 0%, rgba(171,71,188 ,1) 70%);
    box-shadow: 1px 1px 30px rgba(81,45,168 ,1);
  }

  li.white {
    height: 18em; width:3em; z-index:1;
    border-left:1px solid #bbb;
    border-bottom:1px solid #bbb;
    border-radius:0 0 2px 2px;
    box-shadow:-1px 0 0 rgba(255,255,255,0.8) inset, 0 0 5px #ccc inset, 0 0 2px rgba(0,0,0,0.2);
    background-color: white;

  }

  li.white:active {
    border-top:1px solid #777;
    border-left:1px solid #999;
    border-bottom:1px solid #999;
    box-shadow:1px 0 1.5px rgba(0,0,0,0.1) inset, -5px 5px 20px rgba(0,0,0,0.2) inset,0 0 3px rgba(0,0,0,0.2);
    background: linear-gradient(top, #fff 0%,#e9e9e9 100%);
  }

    li.black {
    height:10em; width:2em; margin:0 0 0 -1em; z-index:2;
    border:1px solid #000;
    border-radius:0 0 3px 3px;
    box-shadow:-1px -1px 2px rgba(255,255,255,0.2) inset, 0 -5px 2px 3px rgba(0,0,0,0.6) inset, 0 2px 4px rgba(0,0,0,0.5);
    background:linear-gradient(45deg, #222 0%,#555 100%);
  }

  li.black:active {
    box-shadow:-1px -1px 2px rgba(255,255,255,0.2) inset, 0 -2px 2px 3px rgba(0,0,0,0.6) inset, 0 1px 2px rgba(0,0,0,0.5);
    background:linear-gradient(left, #444 0%,#222 100%);
  }

  .neon#sequencer-label {
    font-size: 2em;
  }


</style>

<div id="wrap">
  <div id="looper">
    <div id="sequencer-label" class = "neon"><p>SEQUENCER</p></div>
    <div id="sequencer-wrapper">
      <div id="sequencer-tab-labels-container">
          <ul id="sequencer-tab-labels">
            <li id="F#-label">F#</li>
            <li id="Snare-label">Snare</li>
            <li id="kick-label">Kick</li>
            <li id="bass-label">Bass</li>
            <li id="piano-label">Piano</li>
        </ul>
      </div>
      <div id="seq"></div>
      <div id="piano"></div>
      <button id='button-class' onclick="start()">start</button>
      <button id='button-class' onclick="stop()">stop</button>
  </div>




  </div>
</div>

<script>
  // sequencer
  var t;
  var audioCtx = new (window.AudioContext || window.webkitAudioContext)();

  //creates new Sequencer
  var sequencer = new Nexus.Sequencer('#seq',{
   'size': [1200,200],
   'mode': 'toggle',
   'rows': 5, //Changed the number of rows to 5
   'columns': 32 //Changed this to make it 32 columns instead of 16
  })

  sequencer.colorize("accent","#ff0");
  sequencer.colorize("fill","#323156");

  var keys = new Tone.Players({
    "bass" : "https://raw.githubusercontent.com/Tonejs/Tone.js/master/examples/audio/loop/bass.mp3",
    "kick" : "https://raw.githubusercontent.com/Tonejs/Tone.js/master/examples/audio/loop/kick.mp3",
    "snare" : "https://raw.githubusercontent.com/Tonejs/Tone.js/master/examples/audio/loop/snare.mp3",
    "F#" : "https://raw.githubusercontent.com/Tonejs/Tone.js/master/examples/audio/casio/Fs2.mp3",
  }, {
    "volume" : -10,
    "fadeOut" : "64n",
  }).toMaster();

  var noteNames = ["bass", "kick", "snare", "F#"];
  var loop = new Tone.Sequence(playNote, [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "32n");
  //Changed the array from 16 to 32 and the subdivision from 16n to 32n
  Tone.Transport.start();

  //Synth for Piano
  var dist = new Tone.Distortion(1).toMaster();
  var synth = new Tone.Synth().connect(dist);
  synth.volume.value = -10;

  //Variables to update the sequencer when a note is played
  var piano_on_sequencer = []
  var count = 0
  var notes = ["F2", "Gb2", "G2", "Ab2", "A2", "Bb2", "B2", "C3", "Db3", "D3", "Eb3", "E3", "F3", "Gb3", "G3", "Ab3", "A3", "Bb3", "B3", "C4", "Db4", "D4", "Eb4", "E4", "F4", "Gb4", "G4", "Ab4", "A4", "Bb4", "B4", "C5", "Db5", "D5", "Eb5", "E5", "F5", "Gb5", "G5", "Ab5", "A5", "Bb5", "B5", "C6"];

function playNote (time, col){
  //Function to update sequencer and include piano sounds
  t = time;
  sequencer.next();
}
//Nexus.context = audioCtx;

//MARK:- SEQUENCER CODE
  sequencer.on('step',function(v) {
    //console.log(v);
    for (var i = 0; i < 5; i++){
      if (v[i] === 1 && i != 0){ //For the first 4 rows
        var vel = Math.random() * 0.5 + 0.5; //slightly randomized velocities
        keys.get(noteNames[i]).start(t, 0, "32n", 0, vel);
      }
      else if (v[i] === 1 && i === 0){ //Handling the last row for piano sounds
        synth.triggerAttackRelease(piano_on_sequencer[count], "8n");
        //console.log(piano_on_sequencer[count]);
      }
    }
    if (count === 31) {
      count = 0
    }
    else {
      count++
    }

    //console.log(count)
  });

  sequencer.on('change',function(data) {
    seqChange(data);
  });

  function start() {
    loop.start();
  }

  function stop() {
    loop.stop();
  }



  function seqChange(data) {
    // console.log('seqChange: ' + JSON.stringify(data));
    node.connections.forEach( (nid) => {
      node.transmitSeqChange(nid, data);
    });
  }

  function updateSeq(data){
    sequencer.matrix.set.cell(data.column, data.row, data.state);
  }

//MARK:- PIANO SYNTH CODE

piano_classes = ["white a", "black a", "white a", "black a", "white a", "black a", "white a", "white", "black a", "white a", "black a",
"white a", "white", "black a", "white a", "black a", "white a", "black a", "white a", "white", "black a", "white a","black a",
"white a", "white", "black a", "white a", "black a", "white a", "black a", "white a", "white"];

  (function(){
  var ul = document.createElement('ul');
    ul.setAttribute('id','keys');
    document.getElementById('piano').appendChild(ul);

    for (var num = 0; num < 32; num++){
        var li = document.createElement('li');
        li.setAttribute('id', num);
        //if
        li.setAttribute('class',piano_classes[num]);
        ul.appendChild(li);
       }

    }
  )();

//Capturing the note that is clicked
  $(document).ready(function(){
    $("#keys li").click(function(){
      synth.triggerAttackRelease(notes[this.id], "8n");

      //Updating the sequencer UI
      piano_on_sequencer[count] = notes[this.id];
      sequencer.matrix.set.cell(count,4,1);
      });
  });

// Creating a global variable that will store the notes to be played on the sequencer


  /*
  //Commenting this out while I figure out what to do about capturing notes for the sequencers
  function pianoFrequency(id){
  var notes = ["F2", "Gb2", "G2", "Ab2", "A2", "Bb2", "B2", "C3", "Db3", "D3", "Eb3", "E3", "F3", "Gb3", "G3", "Ab3", "A3", "Bb3", "B3", "C4", "Db4", "D4", "Eb4", "E4", "F4", "Gb4", "G4", "Ab4", "A4", "Bb4", "B4", "C5", "Db5", "D5", "Eb5", "E5", "F5", "Gb5", "G5", "Ab5", "A5", "Bb5", "B5", "C6"];
  // console.log(`${id}, ${notes[id]}`);
  return notes[id];
};*/

</script>
