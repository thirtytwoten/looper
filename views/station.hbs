{{!-- station.hbs, the view for the station --}}
{{!-- a lot going on here... synth, sequencer, station info, etc --}}
{{!-- served by this routing method in server.js: app.get('/station/:stationid', function (req, res) {...}); --}}

<!DOCTYPE HTML>
<html lang="en">
<head>
<title>LOOPER</title>
<link rel="stylesheet" href="../style.css">
<link rel="stylesheet" href="../bootstrap4-retro.css">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Montserrat|Shrikhand" rel="stylesheet">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Language" content="en-us">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<!--script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8/jquery.min.js"></script-->
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js" integrity="sha384-cs/chFZiN24E4KMATLdqdvsezGxaGsi4hLGOzlXwp5UZB1LY//20VyM2taTB4QvJ" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js" integrity="sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm" crossorigin="anonymous"></script>
<script src="https://rawgit.com/nexus-js/ui/master/dist/NexusUI.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/tone/0.12.66/Tone.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.1.0/socket.io.dev.js"></script>
<script type="text/javascript" src="../serverLink.js"></script>
<script type="text/javascript" src="../peer.js"></script>
<script type="text/javascript" src="../user.js"></script>
<script type="text/javascript" src="../SoundMatrix.js"></script>
<script type="text/javascript" src="../station.js"></script>
</head>
<body style = "background-color: #601609;">
  {{!-- this is a way to passing JSON data from the server to use in the front-end javascript --}}
    {{!-- render data in html page (in html source, not visable to user) --}}
    <div id='userid' data-userid={{userid}}></div>
    <div id='station' data-station={{station}}></div>
    {{!-- javascript pulls this data out and saves it as javascript variables for easy referencing --}}
    {{!-- eg. let userid = $('#userid').data('userid'); let stationData = $('#station').data('station'); --}}

    <div class="container">
    <h1 class="display-1 text-danger text-center display-xxl text-uppercase">Looper</h1>
    <nav class="navbar navbar-expand-lg ht-tm-element navbar-dark bg-secondary">
      <div class="collapse navbar-collapse" id="navbarTogglerDemo03">
        <ul class="navbar-nav mr-auto mt-2 mt-md-0">
          <li class="nav-item active">
            <a class="nav-link display-3" href="#!">Home <span class="sr-only">(current)</span></a>
          </li>
        </ul>
      </div>
    </nav>
     <div class="list-group ht-tm-element" style = "background-color: #e8a610;">
          <a id = "node-id" class="display-4 list-group-item" style = "background-color: #e8a610;"></a>
          <a id = "station-id" class="display-4 list-group-item" style = "background-color: #e8a610;"></a>
        </div>

    <div class ="row">
    <div class="col-lg-9">
      <div id ="seq"></div>
      <div class = "row">
        <div class="col-lg" style="background-color: #ffbc21; height: 280px; margin: 2px;margin-left: 40px;">
        <div id="synth">
          <ul id="keys">
            <li id="0" class="white a" > </li>
            <li id="1" class="black a" ></li>
            <li id="2" class="white a"></li>
            <li id="3" class="black a"></li>
            <li id="4" class="white a"></li>
            <li id="5" class="black a"></li>
            <li id="6" class="white a"></li>
            <li id="7" class="white"></li>
            <li id="8" class="black a"></li>
            <li id="9" class="white a"></li>
            <li id="10" class="black a"></li>
            <li id="11" class="white a"></li>
            <li id="12" class="white"></li>
            <li id="13" class="black a"></li>
            <li id="14" class="white a"></li>
            <li id="15" class="black a"></li>
            <li id="16" class="white a"></li>
            <li id="17" class="black a"></li>
            <li id="18" class="white a"></li>
            <li id="19" class="white"></li>
            <li id="20" class="black a"></li>
            <li id="21" class="white a"></li>
            <li id="22" class="black a"></li>
            <li id="23" class="white a"></li>
            <li id="24" class="white"></li>
            <li id="25" class="black a"></li>
            <li id="26" class="white a"></li>
            <li id="27" class="black a"></li>
            <li id="28" class="white a"></li>
            <li id="29" class="black a"></li>
            <li id="30" class="white a"></li>
            <li id="31" class="white"> </li>
          </ul>
        </div>
        </div>
        <!--div class="col-lg-5" style="background-color: grey; height: 100px; margin: 2px;"></div-->
      </div>
    </div>
    <div class = "col-lg-1"></div>
    <div class = "col-lg-2" style = "padding-left: 0px; background-color:#e8a610; z-index: -1;">
        <h3>Chat</h3>
      <div class="ht-tm-codeblock ht-tm-btn-replaceable ht-tm-element ht-tm-element-inner">
        <ul class="list-group ht-tm-element" id="peermsg">
        </ul>
            <form id = "form">
              <div class="form-group">
                <label for="Enter message">Email address</label>
                  <input type="text" id="text" placeholder="Enter message">
              </div>
              <button type="submit" class="btn btn-secondary" value="Send">Submit</button>
            </form>
          </div>
    </div>
  </div>
      <div class="row">
        <div class="col-lg-1"></div>
        <div class="col-lg-4">
        <button type="button" class="ht-tm-element btn btn-block btn-secondary" onclick=start()>Start</button>
      </div>
      <div class = "col-lg-4">
        <button type="button" class="ht-tm-element btn btn-block btn-secondary" onclick=stop()>Stop</button>
      </div>
      <div class= "col-lg-2"></div>
      </div>
      <div class = "row">
        <div class = "col-lg-6" style = "background-color: grey">
          <h3 = "display-3">Connected Peers: </h3>
          <div style = "background-color: #e8a610;">
            <ul id='peers' class="list-group ht-tm-element">
        </ul>
          <ul ><ul>
          </div>
        <div class = "col-lg-6" style = "background-color: grey">
          <h3>Debug Log</h3>
          <p>Todo...</p>
        </div>
        <!--div class = "col-lg-3"></div-->
    </div>
  </div>
  </div>

<!--/div>

<div style="clear:both"></div-->

<script type="text/javascript">
  // load data embedded in html as js vars
  let userid = $('#userid').data('userid');
  let stationData = $('#station').data('station');

  // create station from class defined in station.js
  let station = new Station(stationData, null);
  let stationid = station.ownerid;
  // create user from class defined in user.js
  let user = new User(userid);

  // set station info
  // let Tracker = [];
  $('#node-id').text(`You are: ${user.node.id}`);
  $('#station-id').text(`Station owner: ${station.ownerid}`);

  updatePeerList(station.connectedPeers);

  function updatePeerList(peers) {
    console.log(peers);
    $('ul#peers').empty();
    peers.forEach((p)=>{
      // if (Tracker.indexOf(p) == -1){
      //   Tracker.unshift(p);
        $('ul#peers').append(`<li class="list-group-item">${p}</li>`);
      // }
    });
  }


  document.getElementById("form").onsubmit = function(e) {
    e.preventDefault();
    var msg = $('#text').val();
    $('ul#peermsg').append(`<li class="list-group-item">${user.node.id}: ${msg}</li>`);
    user.connections.forEach( (nodeid) => {
      user.transmitMsg(nodeid,msg);
    });
    $('#text').val('');
    $('#text').focus();
  };

  function displayMsg(peerId, msg){
    $("ul#peermsg").append(`<li>${peerId} :${msg}</li>`)
  }

  // let IdTracker = []
  if(userid !== stationid){//&& Tracker.indexOf(userid) == -1){
    station.join(user);
    // Tracker.unshift(userid);
    // console.log(IdTracker);
    // serverLink.emit('joinStation', stationid, userid);
    // user.connect(stationid);
    // console.log('joinStation');
  }

</script>

<script>
  let remoteAuthor;

  let context = new (window.AudioContext || window.webkitAudioContext)();
  // initialize sounds for sequencer from class defined in SoundMatrix.js
  let sounds = [
    new Sample('bass', 'https://raw.githubusercontent.com/Tonejs/Tone.js/master/examples/audio/loop/bass.mp3'),
    new Sample('kick', 'https://raw.githubusercontent.com/Tonejs/Tone.js/master/examples/audio/loop/kick.mp3'),
    new Sample('snare', 'https://raw.githubusercontent.com/Tonejs/Tone.js/master/examples/audio/loop/snare.mp3'),
    new Sample('F#', 'https://raw.githubusercontent.com/Tonejs/Tone.js/master/examples/audio/casio/Fs2.mp3')
  ];
  // initialize sequencer matrix from class defined in SoundMatrix.js
  let matrix = new SoundMatrix(
    'seq',
    sounds,
    context,
    16
  );

  function start() {
    matrix.start();
  }

  function stop() {
    matrix.stop();
  }

  function seqChange(data) {
    console.log('seqChange: ' + JSON.stringify(data));
    let author = remoteAuthor || user.getId();
    displayLog(author, `set [${data.row},${data.column}] to ${data.state}`);
    //$('ul#log').append(`<li>${user.node.id}: ${data.state}</li>`);
    // console.log(user.connections);
    // console.log("connections");
    if(!remoteAuthor || user.getId()===station.ownerid){
      user.connections.forEach( (nid) => {
        user.transmitSeqChange(nid, Object.assign(data,{author: remoteAuthor || user.getId()}));
      });
    }
    remoteAuthor = null;
  }

  function trackChanges(){
    matrix.sequencer.on('change',function(data) {
      seqChange(data);
    });
  }

  function updateSeq(data){
    // update cell on sequencer (TODO: move to SoundMatrix class)
    remoteAuthor = data.author;
    matrix.sequencer.matrix.set.cell(data.column, data.row, data.state);
  }

  function displayLog(nodeId, msg){
    console.log(`${nodeId}: ${msg}`);
    $('ul#log').append(`<li>${nodeId}: ${msg}</li>`);
  }

  function initSeq(data) {
    console.log(`station.hbs, initSeq`);
    matrix.initPattern(data);
    trackChanges();
  }

  if(user.getId()===station.ownerid){
    trackChanges();
  }


</script>

<script>
  // synth functionality...
  function pianoFrequency(id){
  var notes = ["F2", "Gb2", "G2", "Ab2", "A2", "Bb2", "B2", "C3", "Db3", "D3", "Eb3", "E3", "F3", "Gb3", "G3", "Ab3", "A3", "Bb3", "B3", "C4", "Db4", "D4", "Eb4", "E4", "F4", "Gb4", "G4", "Ab4", "A4", "Bb4", "B4", "C5", "Db5", "D5", "Eb5", "E5", "F5", "Gb5", "G5", "Ab5", "A5", "Bb5", "B5", "C6"];
  // console.log(`${id}, ${notes[id]}`);
  return notes[id];
  };
  $(document).ready(function(){
    $("#keys li").click(function(){
      var dist = new Tone.Distortion(2).toMaster();
      var synth = new Tone.Synth().connect(dist);
      synth.triggerAttackRelease(pianoFrequency(this.id), "8n");
      });
  });
</script>

<br/> <br/> <br/>
<!-- Chat Script -->
<br/> <br/> <br/>

</body>
</html>
