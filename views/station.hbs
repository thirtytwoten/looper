{{!-- station.hbs, the view for the station --}}
{{!-- a lot going on here... synth, sequencer, station info, etc --}}
{{!-- served by this routing method in server.js: app.get('/station/:stationid', function (req, res) {...}); --}}

<!DOCTYPE HTML>
<html lang="en">
<head>
<title>LOOPER</title>
<link rel="stylesheet" href="../style.css">
<link rel="stylesheet" href="../bootstrap4-retro.css">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Montserrat|Shrikhand" rel="stylesheet">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Language" content="en-us">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<!--script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8/jquery.min.js"></script-->
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js" integrity="sha384-cs/chFZiN24E4KMATLdqdvsezGxaGsi4hLGOzlXwp5UZB1LY//20VyM2taTB4QvJ" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js" integrity="sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm" crossorigin="anonymous"></script>
<script src="https://rawgit.com/nexus-js/ui/master/dist/NexusUI.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/tone/0.12.66/Tone.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.1.0/socket.io.dev.js"></script>
<script type="text/javascript" src="../serverLink.js"></script>
<script type="text/javascript" src="../peer.js"></script>
<script type="text/javascript" src="../user.js"></script>
<script type="text/javascript" src="../SoundMatrix.js"></script>
<script type="text/javascript" src="../station.js"></script>
</head>
<body style = "background-color: #601609;">
  {{!-- this is a way to passing JSON data from the server to use in the front-end javascript --}}
    {{!-- render data in html page (in html source, not visable to user) --}}
    <div id='userid' data-userid={{userid}}></div>
    <div id='station' data-station={{station}}></div>
    {{!-- javascript pulls this data out and saves it as javascript variables for easy referencing --}}
    {{!-- eg. let userid = $('#userid').data('userid'); let stationData = $('#station').data('station'); --}}

    <div class="container">
    <h1 class="display-1 text-danger text-center display-xxl text-uppercase">Looper</h1>
    <nav class="navbar navbar-expand-lg ht-tm-element navbar-dark bg-secondary">
      <div class="collapse navbar-collapse" id="navbarTogglerDemo03">
        <ul class="navbar-nav mr-auto mt-2 mt-md-0">
          <li class="nav-item active">
            <a class="nav-link display-3" href="../">Home <span class="sr-only">(current)</span></a>
          </li>
        </ul>
      </div>
    </nav>
     <div class="list-group ht-tm-element" style = "background-color: #e8a610;">
          <a id = "node-id" class="display-4 list-group-item" style = "background-color: #e8a610;"></a>
          <a id = "station-id" class="display-4 list-group-item" style = "background-color: #e8a610;"></a>
        </div>

    <div class ="row">
    <div class="col-lg-10">
      <div id ="seq"></div>
      <div class = "row">
        <div class="col-lg-11" >
        <div class = "card" style="background-color: #ffbc21; height: 300px; width: 860px;margin: 2px;margin-left: 20px;">
        <div class = "card-body">
        <div id="synth" style ="">
          <ul id="keys">
            <li id="0" class="white a" > </li>
            <li id="1" class="black a" ></li>
            <li id="2" class="white a"></li>
            <li id="3" class="black a"></li>
            <li id="4" class="white a"></li>
            <li id="5" class="black a"></li>
            <li id="6" class="white a"></li>
            <li id="7" class="white"></li>
            <li id="8" class="black a"></li>
            <li id="9" class="white a"></li>
            <li id="10" class="black a"></li>
            <li id="11" class="white a"></li>
            <li id="12" class="white"></li>
            <li id="13" class="black a"></li>
            <li id="14" class="white a"></li>
            <li id="15" class="black a"></li>
            <li id="16" class="white a"></li>
            <li id="17" class="black a"></li>
            <li id="18" class="white a"></li>
            <li id="19" class="white"></li>
            <li id="20" class="black a"></li>
            <li id="21" class="white a"></li>
            <li id="22" class="black a"></li>
            <li id="23" class="white a"></li>
            <li id="24" class="white"></li>
            <li id="25" class="black a"></li>
            <li id="26" class="white a"></li>
            <li id="27" class="black a"></li>
            <li id="28" class="white a"></li>
            <li id="29" class="black a"></li>
            <li id="30" class="white a"></li>
            <li id="31" class="white"> </li>
          </ul>
        </div>
      </div>
    </div>
        </div>
      </div>
    </div>
    <div class = "col-lg-2">
    <div class = "card" style = "padding-left: 0px; background-color:#e8a610; height: 100%;">
    <div class = "card-body">
      <!--This is where the Chat box used to be-->
        <h3 class = "display-4 text-danger" style = "font-size: 1.6em;">Connected Peers </h3>
        <div style = "background-color: #e8a610;">
          <ul id='peers' class="list-group ht-tm-element">
      </ul>
        </div>
      </div>
    </div>
  </div>
</div>

  <div class="row">
    <!--div class="col-lg-1"></div-->
    <div class="col-lg-5">
      <button type="button" class="ht-tm-element btn btn-block btn-secondary display-1 text-danger" style = "height: 60px; font-size: 2em;" onclick=start()>Start</button>
    </div>
    <div class = "col-lg-5">
      <button type="button" class="ht-tm-element btn btn-block btn-secondary display-1 text-danger" style = "height: 60px; font-size: 2em;" onclick=stop()>Stop</button>
    </div>
      <!--div class= "col-lg-2"></div-->
  </div>
    
  <div class = "row" style = "padding-top: 8px; padding-box: 6px;">

    <div class = "col-lg-5" >
      <div class = "card" style = "padding-left: 0px; background-color:#e8a610;">
        <div class = "card-body">
          <h3 class = "display-4 text-danger">Chat</h3>
          <div class="ht-tm-codeblock ht-tm-btn-replaceable ht-tm-element ht-tm-element-inner" style = "padding-left: 15px;">
            <ul class="list-group ht-tm-element" id="peermsg"></ul>
            <form class="form-group" id = "form">
              <input type="text" class="form-control" id ="text" placeholder="Enter message">
              <button type="submit" class="btn btn-secondary" value="Send">Submit</button>
            </form>
          </div>
        </div>
      </div>

      <div class = "card" style = "padding-left: 0px; background-color:#e8a610;">
        <div class = "card-body">
          <h3 class = "display-4 text-danger">Invite your friends</h3>
          <div class="ht-tm-codeblock ht-tm-btn-replaceable ht-tm-element ht-tm-element-inner" style = "padding-left: 15px;">
            <form action="javascript:sendMail();" name="pmForm" id="pmForm" method="post">
              <input id="email" type="text" class="form-control" maxlength="64" style="width:98%;" value="" placeholder="Enter friend's email"/>
              <input type="submit" class="btn btn-secondary" value="Invite" />
            </form>
          </div>
        </div>
      </div>

    </div> <!--/col-lg-5-->
{{!--   </div> <!--/row--> --}}

{{!-- </div> --}}
        <!--div class="col-sm"></div-->
        <div class = "col-lg-5">
          <div class = "card" style = "padding-left: 0px; background-color:#e8a610;">
          <div class = "card-body">
          <h3 class = "display-4 text-danger">Debug Log</h3>
          <ul id= "log"></ul>
        </div>
      </div>
    </div>
        <!--div class = "col-lg-3"></div-->
    </div>
  </div>
  </div>

<script type="text/javascript">
  // load data embedded in html as js vars
  let userid = $('#userid').data('userid');
  let stationData = $('#station').data('station');

  // create station from class defined in station.js
  let station = new Station(stationData, null);
  let stationid = station.ownerid;
  // create user from class defined in user.js
  // Allow user also track station it is associated with - removed for testing
  let user = new User(userid, stationid);
  //let user = new User(userid;

  // set station info
  $('#node-id').text(`You are: ${user.userid}`);
  $('#station-id').text(`Station owner: ${station.ownerid}`);

  updatePeerList(station.connectedPeers);

  function updatePeerList(peers) {
    console.log(peers);
    $('ul#peers').empty();
    peers.forEach((p)=>{
      $('ul#peers').append(`<li class="list-group-item">${p}</li>`);
    });
  }

  document.getElementById("form").onsubmit = function(e) {
    e.preventDefault();
    var msg = $('#text').val();
    user.chat(msg);
    $('#text').val('');
    $('#text').focus();
  };

  function displayMsg(peerId, msg){
    $("ul#peermsg").append(`<li class="list-group-item">${peerId}: ${msg}</li>`)
  }

  if(userid !== stationid){
    station.join(user);
  }

</script>

<script>
  let remoteAuthor;

  let context = new (window.AudioContext || window.webkitAudioContext)();
  // initialize sounds for sequencer from class defined in SoundMatrix.js
  let sounds = [
    new Sample('bass', 'https://raw.githubusercontent.com/Tonejs/Tone.js/master/examples/audio/loop/bass.mp3'),
    new Sample('kick', 'https://raw.githubusercontent.com/Tonejs/Tone.js/master/examples/audio/loop/kick.mp3'),
    new Sample('snare', 'https://raw.githubusercontent.com/Tonejs/Tone.js/master/examples/audio/loop/snare.mp3'),
    new Sample('F#', 'https://raw.githubusercontent.com/Tonejs/Tone.js/master/examples/audio/casio/Fs2.mp3')
  ];
  // initialize sequencer matrix from class defined in SoundMatrix.js
  let matrix = new SoundMatrix(
    'seq',
    sounds,
    context,
    16
  );

  function start() {
    matrix.start();
  }

  function stop() {
    matrix.stop();
  }

  function seqChange(data) {
    let author = remoteAuthor || user.userid;
    logUserData(author, `set [${data.row},${data.column}] to ${data.state}`);
    if(!remoteAuthor || user.stationOwner){
      user.connections.forEach( (nid) => {
        if (nid !== remoteAuthor) { // no need to transmit back to person who made the changes
          user.transmitSeqChange(nid, Object.assign(data,{author: remoteAuthor || user.userid}));
        }
      });
    }
    remoteAuthor = null;

	// Show latencies for this node's connections
	//user.showLatency();
	//user.showThroughput();
  }

  function trackChanges(){
    matrix.sequencer.on('change',function(data) {
      seqChange(data);
    });
  }

  function updateSeq(data){
    // update cell on sequencer
    if(data.author !== user.userid){ //(just in case change ended up getting propegated back to author)
      remoteAuthor = data.author;
    }
    matrix.sequencer.matrix.set.cell(data.column, data.row, data.state);
  }

  function logUserData(nodeId, data){
    log(`${nodeId}: ${data}`);
  }

  function log(str) {
    $('ul#log').append(`<li>${str}</li>`);
  }

  function initSeq(data) {
    matrix.initPattern(data);
    log('[initialize sequencer]');
    trackChanges();
  }

  if(user.stationOwner){
    trackChanges();
  }


</script>

<script>
  // synth functionality...
  function pianoFrequency(id){
    var notes = ["F2", "Gb2", "G2", "Ab2", "A2", "Bb2", "B2", "C3", "Db3", "D3", "Eb3", "E3", "F3", "Gb3", "G3", "Ab3", "A3", "Bb3", "B3", "C4", "Db4", "D4", "Eb4", "E4", "F4", "Gb4", "G4", "Ab4", "A4", "Bb4", "B4", "C5", "Db5", "D5", "Eb5", "E5", "F5", "Gb5", "G5", "Ab5", "A5", "Bb5", "B5", "C6"];
    return notes[id];
  };
  $(document).ready(function(){
    $("#keys li").click(function(){
      pianoClick(this.id);
      user.connections.forEach( (nid) => {
        user.transmitPiano(nid,this.id);
      });
    });
  });

  // if user plays piano by mouse, the note is sustained for a set amount of time
  function pianoClick (ID){
    newSynth().triggerAttackRelease(pianoFrequency(ID), "8n");
  }

  function newSynth() {
    let dist = new Tone.Distortion(2).toMaster();
    return new Tone.Synth().connect(dist);
  }

  let keyMap = {
    // bottom row
    'KeyZ' : 0, //F
    'KeyS' : 1,
    'KeyX' : 2,
    'KeyD' : 3,
    'KeyC' : 4,
    'KeyF' : 5,
    'KeyV' : 6,
    'KeyB' : 7,
    'KeyH' : 8,
    'KeyN' : 9,
    'KeyJ' : 10,
    'KeyM' : 11,
    'Comma' : 12,
    'KeyL' : 13,
    'Period' : 14,
    'Semicolon' : 15, //Gsharp
    // top row
    'KeyQ' : 16, //A
    'Digit2' : 17,
    'KeyW' : 18,
    'KeyE' : 19,
    'Digit4' : 20,
    'KeyR' : 21,
    'Digit5' : 22,
    'KeyT' : 23,
    'KeyY' : 24,
    'Digit7' : 25,
    'KeyU' : 26,
    'Digit8' : 27,
    'KeyI' : 28,
    'Digit9' : 29,
    'KeyO' : 30,
    'KeyP' : 31 //C
  }

  let activeSounds = {};

  document.addEventListener('keydown',(e)=>{ pianoKeyPress(user.userid, e.code) });
  document.addEventListener('keyup', (e)=>{ pianoKeyRelease(user.userid, e.code) });

  function pianoKeyPress(userid, keyCode) {
    let ID = keyMap[keyCode];
    let selector = `#keys li#${ID}`;
    if(!activeSounds[`${userid}-${keyCode}`]){
      activeSounds[`${userid}-${keyCode}`] = newSynth();
      activeSounds[`${userid}-${keyCode}`].triggerAttack(pianoFrequency(ID));
    }
    if(userid === user.userid){
      if(!$(selector).hasClass('active')){ $(selector).addClass('active') }
    }
  }

  function pianoKeyRelease(userid, keyCode) {
    if(userid === user.userid){
      let ID = keyMap[keyCode];
      let selector = `#keys li#${ID}`;
      $(selector).removeClass('active');
    }
    activeSounds[`${userid}-${keyCode}`] && activeSounds[`${userid}-${keyCode}`].triggerRelease();
    activeSounds[`${userid}-${keyCode}`] = null;
  }

  function sendMail() {
    var email = document.getElementById("email").value;
    var body = `${user.userid}: would like you to join his/her station!\n\n Click the link below to access the station! \n http://${window.location.hostname}:${window.location.port}\\station\\${station.ownerid}\n`;
    //var emailF = 'mailto:'+email+'?subject=Invitation&body=Hello! \nI would like you to join my station!'
    var link = `mailto: ${email}?cc=&subject=Looper Invitation!&body=${body}`;
    console.log(link);
    window.location.href = link;
  }
</script>

<br/> <br/> <br/>

<br/> <br/> <br/>

</body>
</html>
